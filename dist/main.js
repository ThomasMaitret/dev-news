"use strict";const SUBREDDITS=["angular2","node","javascript","webdev","frontend","coding","css","html5"],getTheme=()=>{const e=localStorage.getItem("theme");e&&(document.documentElement.dataset.theme=e),document.querySelector(".theme-switcher").addEventListener("click",switchTheme,{passive:!0})},switchTheme=()=>{const e="dark"===document.documentElement.getAttribute("data-theme")?"light":"dark";document.documentElement.dataset.theme=e,localStorage.setItem("theme",e)},getPostsFromCache=()=>{const e=JSON.parse(localStorage.getItem("listings"));e&&appendListingsToDOM(e)},getPosts=async()=>{try{getPostsFromCache();const e=await Promise.all(SUBREDDITS.map(async e=>{const t=await fetch(`https://www.reddit.com/r/${e}/hot.json?limit=5`);return await t.json()}));appendListingsToDOM(e),localStorage.setItem("listings",JSON.stringify(e))}catch(e){throw new Error(e)}},appendListingsToDOM=e=>{const t=document.querySelector(".posts");t.innerHTML="";const n=document.createDocumentFragment();getSortedPostsFromListings(e).forEach(e=>{const t=document.createElement("a");t.classList.add("link"),t.textContent=e.title,t.href=e.url,t.target="_blank",t.rel="noopener";const a=document.createElement("span");a.textContent=` (${e.domain})`;const s=document.createElement("span");s.textContent=new Date(1e3*e.created).toLocaleDateString();const o=document.createElement("a");o.classList.add("subreddit"),o.textContent=e.subreddit,o.target="_blank",o.rel="noopener",o.href=`https://reddit.com${e.permalink}`;const c=document.createElement("img");c.alt=`${e.domain}`,c.loading="lazy";const r=e.domain.startsWith("self.")?"reddit.com":e.domain;c.src=`https://www.google.com/s2/favicons?domain_url=${r}&sz=16`,c.classList.add("site-icon");const d=document.createElement("li");d.classList.add("post"),d.append(c),d.append(t),d.append(a),d.append(document.createElement("br")),d.append(o),d.append(" â€¢ "),d.append(s),n.append(d)}),t.append(n)},getSortedPostsFromListings=e=>{return e.reduce((e,t)=>(e.push(...Object.values(t.data.children).map(e=>e.data)),e),[]).reduce((e,t)=>{return e.find(e=>e.url===t.url)?e:e.concat([t])},[]).sort((e,t)=>new Date(1e3*t.created)-new Date(1e3*e.created))};getTheme(),getPosts();